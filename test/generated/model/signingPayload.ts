/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * The version of the OpenAPI document: 1.4.13
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "./models";
import { AccountIdentifier } from "./accountIdentifier";
import { SignatureType } from "./signatureType";

/**
 * SigningPayload is signed by the client with the keypair associated with an AccountIdentifier using the specified SignatureType.  SignatureType can be optionally populated if there is a restriction on the signature scheme that can be used to sign the payload.
 */
export class SigningPayload {
  /**
   * [DEPRECATED by `account_identifier` in `v1.4.4`] The network-specific address of the account that should sign the payload.
   */
  "address"?: string;
  "accountIdentifier"?: AccountIdentifier;
  /**
   * Hex-encoded string of the payload bytes.
   */
  "hexBytes": string;
  "signatureType"?: SignatureType;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "address",
      baseName: "address",
      type: "string",
    },
    {
      name: "accountIdentifier",
      baseName: "account_identifier",
      type: "AccountIdentifier",
    },
    {
      name: "hexBytes",
      baseName: "hex_bytes",
      type: "string",
    },
    {
      name: "signatureType",
      baseName: "signature_type",
      type: "SignatureType",
    },
  ];

  static getAttributeTypeMap() {
    return SigningPayload.attributeTypeMap;
  }
}

export namespace SigningPayload {}
