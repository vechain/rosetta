/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * The version of the OpenAPI document: 1.4.13
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "./models";
import { AccountIdentifier } from "./accountIdentifier";
import { CoinIdentifier } from "./coinIdentifier";
import { Currency } from "./currency";
import { NetworkIdentifier } from "./networkIdentifier";
import { Operator } from "./operator";
import { TransactionIdentifier } from "./transactionIdentifier";

/**
 * SearchTransactionsRequest is used to search for transactions matching a set of provided conditions in canonical blocks.
 */
export class SearchTransactionsRequest {
  "networkIdentifier": NetworkIdentifier;
  "operator"?: Operator;
  /**
   * max_block is the largest block index to consider when searching for transactions. If this field is not populated, the current block is considered the max_block.  If you do not specify a max_block, it is possible a newly synced block will interfere with paginated transaction queries (as the offset could become invalid with newly added rows).
   */
  "maxBlock"?: number;
  /**
   * offset is the offset into the query result to start returning transactions.  If any search conditions are changed, the query offset will change and you must restart your search iteration.
   */
  "offset"?: number;
  /**
   * limit is the maximum number of transactions to return in one call. The implementation may return <= limit transactions.
   */
  "limit"?: number;
  "transactionIdentifier"?: TransactionIdentifier;
  "accountIdentifier"?: AccountIdentifier;
  "coinIdentifier"?: CoinIdentifier;
  "currency"?: Currency;
  /**
   * status is the network-specific operation type.
   */
  "status"?: string;
  /**
   * type is the network-specific operation type.
   */
  "type"?: string;
  /**
   * address is AccountIdentifier.Address. This is used to get all transactions related to an AccountIdentifier.Address, regardless of SubAccountIdentifier.
   */
  "address"?: string;
  /**
   * success is a synthetic condition populated by parsing network-specific operation statuses (using the mapping provided in `/network/options`).
   */
  "success"?: boolean;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "networkIdentifier",
      baseName: "network_identifier",
      type: "NetworkIdentifier",
    },
    {
      name: "operator",
      baseName: "operator",
      type: "Operator",
    },
    {
      name: "maxBlock",
      baseName: "max_block",
      type: "number",
    },
    {
      name: "offset",
      baseName: "offset",
      type: "number",
    },
    {
      name: "limit",
      baseName: "limit",
      type: "number",
    },
    {
      name: "transactionIdentifier",
      baseName: "transaction_identifier",
      type: "TransactionIdentifier",
    },
    {
      name: "accountIdentifier",
      baseName: "account_identifier",
      type: "AccountIdentifier",
    },
    {
      name: "coinIdentifier",
      baseName: "coin_identifier",
      type: "CoinIdentifier",
    },
    {
      name: "currency",
      baseName: "currency",
      type: "Currency",
    },
    {
      name: "status",
      baseName: "status",
      type: "string",
    },
    {
      name: "type",
      baseName: "type",
      type: "string",
    },
    {
      name: "address",
      baseName: "address",
      type: "string",
    },
    {
      name: "success",
      baseName: "success",
      type: "boolean",
    },
  ];

  static getAttributeTypeMap() {
    return SearchTransactionsRequest.attributeTypeMap;
  }
}

export namespace SearchTransactionsRequest {}
